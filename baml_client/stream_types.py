# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (9)
# #########################################################################

class Chosen_Theme(BaseModel):
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None

class Classification(BaseModel):
    model_reasoning: typing.Optional[str] = None
    chosen_theme: typing.Optional["Chosen_Theme"] = None

class Completed_Form(BaseModel):
    title: typing.Optional[str] = None
    type: typing.Optional[str] = None
    properties: typing.Optional["Properties"] = None

class Contact_Info(BaseModel):
    type: typing.Optional[str] = None
    properties: typing.Optional["Contact_Properties"] = None

class Contact_Properties(BaseModel):
    email: typing.Optional[str] = None
    phone: typing.Optional[str] = None
    preferred_contact_method: typing.Optional[types.Preferred_Contact_Method] = None
    call_reasons: typing.Optional[typing.List[str]] = None

class Personal_Info(BaseModel):
    type: typing.Optional[str] = None
    properties: typing.Optional["Personal_Properties"] = None

class Personal_Properties(BaseModel):
    first_name: typing.Optional[str] = None
    last_name: typing.Optional[str] = None
    gender: typing.Optional[types.Gender] = None

class Properties(BaseModel):
    personal_info: typing.Optional["Personal_Info"] = None
    contact_info: typing.Optional["Contact_Info"] = None

class Resume(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    experience: typing.List[str]
    skills: typing.List[str]

# #########################################################################
# Generated type aliases (0)
# #########################################################################
